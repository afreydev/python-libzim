name: test
on: [push]

env:
  CYTHON_VERSION: 0.29.6
  MAX_LINE_LENGTH: 110

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
          architecture: x64

      - name: Autoformat with black
        run: |
          pip install black
          black --check --exclude=setup.py .

      - name: Lint with flake8
        run: |
          pip install flake8
          # one pass for show-stopper syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --exclude=setup.py --show-source --statistics
          # one pass for small stylistic things
          flake8 . --count --exclude=setup.py --max-line-length=$MAX_LINE_LENGTH --statistics

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # TODO: expand this once macos and windows libzim releases become available
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # alternatively we can compile libzim in docker and use the container as an action
        python: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
          
      - name: Install compilation dependencies
        run: |
          sudo apt update -y && \
          sudo apt install -y --no-install-recommends git pkg-config libtool automake autoconf make g++ liblzma-dev libxapian-dev coreutils meson ninja-build wget zlib1g-dev libicu-dev libgumbo-dev libmagic-dev ca-certificates && \
          sudo apt clean -y
          sudo update-ca-certificates
          
      - name: Install libzim
        run: |
          git clone https://github.com/openzim/libzim.git libzim-src
          cd libzim-src
          git checkout 6.0.2
          sudo meson . build
          sudo ninja -C build install
          cd ..
          sudo rm -rf libzim-src

      - name: Include folders to LD path
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib/x86_64-linux-gnu/:$LD_LIBRARY_PATH
          sudo ldconfig
                
      - name: Build cython, sdist, and bdist_wheel
        run: |
          pip install --upgrade cython==$CYTHON_VERSION setuptools pip wheel
          python setup.py build_ext
          python setup.py sdist bdist_wheel
          
      - name: Test built package with pytest 
        run: |
          sudo ldconfig
          pip install pytest
          pip install -e .
          pytest .
